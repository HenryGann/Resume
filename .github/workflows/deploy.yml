name: Generate PDF

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      matrix:
        platform: [
          linux/amd64,
        ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

  build-pdf:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create lowercase image name.
        run: echo "IMAGE_NAME_LOWER=$(echo ${{ env.IMAGE_NAME }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Run Docker container to generate PDF and image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:main
          docker run --rm -v ${{ github.workspace }}:/workspace ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:main /bin/bash -c "
            cd /workspace &&
            make resume.pdf &&
            mv resume.pdf Henry_Gann-Resume.pdf &&
            pdftoppm -png Henry_Gann-Resume.pdf Henry_Gann-Resume &&
            mv Henry_Gann-Resume-1.png Henry_Gann-Resume.png
          "

      - name: Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          files: |
            Henry_Gann-Resume.pdf
            Henry_Gann-Resume.png